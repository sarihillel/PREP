@model PREP.Models.ReleaseGeneralDetails
<div id="status-header" class="col-lg-12 col-md-12 col-xs-12">
    <div class="col-lg-6 col-md-6 col-xs-6 _uscc_div">
        <span class="_uscc">@Model.AccountName |&nbsp;<b>@Model.Name </b></span><br>
        <span class="_uscc_txt col-lg-12 col-md-12 col-xs-12  dots">
            Release Size: @Model.Size  &nbsp;| &nbsp; PREP Review Mode: Full &nbsp; | &nbsp; LOB:  @Model.LOB &nbsp; |&nbsp;  Products:
            @if (ViewBag.productsName != null)
            {
                List<string> list = (List<string>)ViewBag.productsName;
                if (list.Count() > 0)
                {
                    int i;
                    for (i = 0; i < list.Count() - 1; i++)
                    {
                        <span>@list[i],&nbsp;</span>
                    }
                    <span>@list[i]</span>
                }
                @*foreach (var item in (List<string>)ViewBag.productsName)//this good
                    {
                        <span>@item,&nbsp;</span>
                    }*@
            }
        </span>
    </div>

    <div id="action-buttons" class="col-lg-6 col-md-6 col-xs-6  _uscc_div _pad_r_5 ">
        <button type="button" class="view_btn btn btn-info _no-border-radius-btn _transparent_btns" id="save-status">Save</button>
        <button type="button" id="draft-button" class="view_btn btn btn-info _no-border-radius-btn _transparent_btns">Publish a Draft</button>
        <button type="button" id="formal-button" class="view_btn btn btn-info _no-border-radius-btn _transparent_btns">Formal Publish</button>
    </div>

</div>
<script>
    //(function (exports) {
    //function urlsToAbsolute(nodeList) {
    //    if (!nodeList.length) {
    //        return [];
    //    }
    //    var attrName = 'href';
    //    if (nodeList[0].__proto__ === HTMLImageElement.prototype
    //    || nodeList[0].__proto__ === HTMLScriptElement.prototype) {
    //        attrName = 'src';
    //    }
    //    nodeList = [].map.call(nodeList, function (el, i) {
    //        var attr = el.getAttribute(attrName);
    //        if (!attr) {
    //            return;
    //        }
    //        var absURL = /^(https?|data):/i.test(attr);
    //        if (absURL) {
    //            return el;
    //        } else {
    //            return el;
    //        }
    //    });
    //    return nodeList;
    //}

    //function screenshotPage() {
    //    console.log("fff");
    //    urlsToAbsolute(document.images);
    //    urlsToAbsolute(document.querySelectorAll("link[rel='stylesheet']"));
    //    var screenshot = document.documentElement.cloneNode(true);
    //    var b = document.createElement('base');
    //    b.href = document.location.protocol + '//' + location.host;
    //    var head = screenshot.querySelector('head');
    //    head.insertBefore(b, head.firstChild);
    //    screenshot.style.pointerEvents = 'none';
    //    screenshot.style.overflow = 'hidden';
    //    screenshot.style.webkitUserSelect = 'none';
    //    screenshot.style.mozUserSelect = 'none';
    //    screenshot.style.msUserSelect = 'none';
    //    screenshot.style.oUserSelect = 'none';
    //    screenshot.style.userSelect = 'none';
    //    screenshot.dataset.scrollX = window.scrollX;
    //    screenshot.dataset.scrollY = window.scrollY;
    //    var script = document.createElement('script');
    //    script.textContent = '(' + addOnPageLoad_.toString() + ')();';
    //    screenshot.querySelector('body').appendChild(script);
    //    console.log("screenshot", screenshot);
    //    mailBody = screenshot;
    //   // mailBody = document.documentElement.cloneNode(true);
    //    var blob = new Blob([screenshot.outerHTML], {
    //        type: 'text/html'
    //    });
    //    console.log("blob", blob);
    //    return blob;

    //}

    //function addOnPageLoad_() {
    //    window.addEventListener('DOMContentLoaded', function (e) {
    //        var scrollX = document.documentElement.dataset.scrollX || 0;
    //        var scrollY = document.documentElement.dataset.scrollY || 0;
    //        window.scrollTo(scrollX, scrollY);
    //    });
    //}

    //    function generate() {
    //        window.URL = window.URL || window.webkitURL;
    //        window.open(window.URL.createObjectURL(screenshotPage()));
    //    }
    //    exports.screenshotPage = screenshotPage;
    //    exports.generate = generate;
    //})(window);
</script>

